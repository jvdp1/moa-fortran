#! -*- mode: f90; -*-
#:mute

#! Real kinds to be considered during templating
#:set REAL_KINDS = ["ds", "dd", "dq"]

#! Real types to be considered during templating
#:set REAL_TYPES = ["real({})".format(k) for k in REAL_KINDS]

#! Collected (kind, type) tuples for real types
#:set REAL_KINDS_TYPES = list(zip(REAL_KINDS, REAL_TYPES))

#! Integer kinds to be considered during templating
#:set INT_KINDS = ["di", "dl"]

#! Integer types to be considered during templating
#:set INT_TYPES = ["integer({})".format(k) for k in INT_KINDS]

#! Collected (kind, type) tuples for integer types
#:set INT_KINDS_TYPES = list(zip(INT_KINDS, INT_TYPES))


#! Code for mining /proc/id_proc/status under Linux

#:def mem_linux(*args)
 #:if len(args) > 0
  write(*,'(a)')${args[0]}$
 #:endif
 block
  integer(kind=4)::getpid
  character(25)::pid,a

  write(*,'(/a,i0,a)')'Memory statistics for process ',getpid(),': '
  write(pid,*)getpid()
  pid=trim(adjustl(pid))

  a='grep VmPeak /proc/'//pid(:len_trim(pid))//'/status'
  call execute_command_line(a)
  a='grep VmSize /proc/'//pid(:len_trim(pid))//'/status'
  call execute_command_line(a)
  a='grep VmHWM /proc/'//pid(:len_trim(pid))//'/status'
  call execute_command_line(a)
  a='grep VmRSS /proc/'//pid(:len_trim(pid))//'/status'
  call execute_command_line(a)
  a='grep VmData /proc/'//pid(:len_trim(pid))//'/status'
  call execute_command_line(a)
  a='grep VmStk /proc/'//pid(:len_trim(pid))//'/status'
  call execute_command_line(a)
  a='grep VmSwap /proc/'//pid(:len_trim(pid))//'/status'
  call execute_command_line(a)
  
 end block
#:enddef

#:endmute
